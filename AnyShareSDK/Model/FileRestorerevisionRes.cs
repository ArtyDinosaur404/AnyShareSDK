/* 
 * 6.0-OpenDoc_API-文档访问
 *
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * The version of the OpenAPI document: 6.0.10
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AnyShareSDK.Client.OpenAPIDateConverter;

namespace AnyShareSDK.Model
{
    /// <summary>
    /// FileRestorerevisionRes
    /// </summary>
    [DataContract]
    public partial class FileRestorerevisionRes :  IEquatable<FileRestorerevisionRes>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FileRestorerevisionRes" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected FileRestorerevisionRes() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="FileRestorerevisionRes" /> class.
        /// </summary>
        /// <param name="editor">版本编辑者名称 (required).</param>
        /// <param name="modified">UTC时间，此为还原产生新版本时的服务器时间 (required).</param>
        /// <param name="clientMtime">如果是文件，返回由客户端设置的文件本地修改时间    若未设置，返回modified的值   (required).</param>
        /// <param name="name">版本所对应文件的名称 (required).</param>
        /// <param name="rev">新的版本号 (required).</param>
        public FileRestorerevisionRes(string editor = default(string), long? modified = default(long?), long? clientMtime = default(long?), string name = default(string), string rev = default(string))
        {
            this.Editor = editor;
            this.Modified = modified;
            this.ClientMtime = clientMtime;
            this.Name = name;
            this.Rev = rev;
        }
        
        /// <summary>
        /// 版本编辑者名称
        /// </summary>
        /// <value>版本编辑者名称</value>
        [DataMember(Name="editor", EmitDefaultValue=false)]
        public string Editor { get; set; }

        /// <summary>
        /// UTC时间，此为还原产生新版本时的服务器时间
        /// </summary>
        /// <value>UTC时间，此为还原产生新版本时的服务器时间</value>
        [DataMember(Name="modified", EmitDefaultValue=false)]
        public long? Modified { get; set; }

        /// <summary>
        /// 如果是文件，返回由客户端设置的文件本地修改时间    若未设置，返回modified的值  
        /// </summary>
        /// <value>如果是文件，返回由客户端设置的文件本地修改时间    若未设置，返回modified的值  </value>
        [DataMember(Name="client_mtime", EmitDefaultValue=false)]
        public long? ClientMtime { get; set; }

        /// <summary>
        /// 版本所对应文件的名称
        /// </summary>
        /// <value>版本所对应文件的名称</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// 新的版本号
        /// </summary>
        /// <value>新的版本号</value>
        [DataMember(Name="rev", EmitDefaultValue=false)]
        public string Rev { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FileRestorerevisionRes {\n");
            sb.Append("  Editor: ").Append(Editor).Append("\n");
            sb.Append("  Modified: ").Append(Modified).Append("\n");
            sb.Append("  ClientMtime: ").Append(ClientMtime).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Rev: ").Append(Rev).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FileRestorerevisionRes);
        }

        /// <summary>
        /// Returns true if FileRestorerevisionRes instances are equal
        /// </summary>
        /// <param name="input">Instance of FileRestorerevisionRes to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FileRestorerevisionRes input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Editor == input.Editor ||
                    (this.Editor != null &&
                    this.Editor.Equals(input.Editor))
                ) && 
                (
                    this.Modified == input.Modified ||
                    (this.Modified != null &&
                    this.Modified.Equals(input.Modified))
                ) && 
                (
                    this.ClientMtime == input.ClientMtime ||
                    (this.ClientMtime != null &&
                    this.ClientMtime.Equals(input.ClientMtime))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Rev == input.Rev ||
                    (this.Rev != null &&
                    this.Rev.Equals(input.Rev))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Editor != null)
                    hashCode = hashCode * 59 + this.Editor.GetHashCode();
                if (this.Modified != null)
                    hashCode = hashCode * 59 + this.Modified.GetHashCode();
                if (this.ClientMtime != null)
                    hashCode = hashCode * 59 + this.ClientMtime.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Rev != null)
                    hashCode = hashCode * 59 + this.Rev.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
