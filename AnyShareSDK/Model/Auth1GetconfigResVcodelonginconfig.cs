/* 
 * OpenDoc_API-文档访问
 *
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * The version of the OpenAPI document: 6.0.10
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AnyShareSDK.Client.OpenAPIDateConverter;

namespace AnyShareSDK.Model
{
    /// <summary>
    /// 登录验证码配置信息
    /// </summary>
    [DataContract]
    public partial class Auth1GetconfigResVcodelonginconfig :  IEquatable<Auth1GetconfigResVcodelonginconfig>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Auth1GetconfigResVcodelonginconfig" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Auth1GetconfigResVcodelonginconfig() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Auth1GetconfigResVcodelonginconfig" /> class.
        /// </summary>
        /// <param name="isenable">是否启用登录验证码功能 (required).</param>
        /// <param name="passwderrcnt">达到开启登录验证码的密码出错次数 (required).</param>
        public Auth1GetconfigResVcodelonginconfig(bool? isenable = default(bool?), long? passwderrcnt = default(long?))
        {
            this.Isenable = isenable;
            this.Passwderrcnt = passwderrcnt;
        }
        
        /// <summary>
        /// 是否启用登录验证码功能
        /// </summary>
        /// <value>是否启用登录验证码功能</value>
        [DataMember(Name="isenable", EmitDefaultValue=false)]
        public bool? Isenable { get; set; }

        /// <summary>
        /// 达到开启登录验证码的密码出错次数
        /// </summary>
        /// <value>达到开启登录验证码的密码出错次数</value>
        [DataMember(Name="passwderrcnt", EmitDefaultValue=false)]
        public long? Passwderrcnt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Auth1GetconfigResVcodelonginconfig {\n");
            sb.Append("  Isenable: ").Append(Isenable).Append("\n");
            sb.Append("  Passwderrcnt: ").Append(Passwderrcnt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Auth1GetconfigResVcodelonginconfig);
        }

        /// <summary>
        /// Returns true if Auth1GetconfigResVcodelonginconfig instances are equal
        /// </summary>
        /// <param name="input">Instance of Auth1GetconfigResVcodelonginconfig to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Auth1GetconfigResVcodelonginconfig input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Isenable == input.Isenable ||
                    (this.Isenable != null &&
                    this.Isenable.Equals(input.Isenable))
                ) && 
                (
                    this.Passwderrcnt == input.Passwderrcnt ||
                    (this.Passwderrcnt != null &&
                    this.Passwderrcnt.Equals(input.Passwderrcnt))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Isenable != null)
                    hashCode = hashCode * 59 + this.Isenable.GetHashCode();
                if (this.Passwderrcnt != null)
                    hashCode = hashCode * 59 + this.Passwderrcnt.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
